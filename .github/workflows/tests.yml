name: Run unit and integration tests

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

defaults:
  run:
    shell: bash -l {0}

jobs:
  test-linux:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8 ]
        conda-version: [release]
        include:
          - python-version: 3.9
            conda-version: canary
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: One step test
        run: |
          python --version
          conda info -a
          source ci/azurepipelines/install_conda_build_test_deps
          pip install --no-deps .
          source ci/github_setup_pytest_replay
          conda info -a
          conda install -y conda
          pytest --color=yes -vv -n 0 --basetemp /tmp/cb_serial --cov conda_build --cov-report xml -m "serial" tests --test-run-title="Linux-SerialTests"
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          CONDA_VERSION: ${{ matrix.conda-version }}

      - name: Set Conda-Canary
        if: matrix.conda-version == 'canary'
        run: |
          conda install -y -c conda-canary conda

      - name: Run Serial tests
        run: |
          conda install -y conda-verify
          conda info -a
          conda list
          pytest --color=yes -vv -n 0 --basetemp /tmp/cb_serial --cov conda_build --cov-report xml -m "serial" tests --test-run-title="Linux-SerialTests"





